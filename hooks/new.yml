---
- name: Retrieve the SHA1 commit from the component meta data
  command: echo '{{ components[0]["name"].split(" ")[-1] }}'
  register: commit

- name: Check if the component has already been installed
  stat:
    path: '{{ base_location }}/{{ commit.stdout }}/ansible'
  register: component_already_installed

# The component is retrieved only if it hasn't been retrieved
# already. This avoid useless cycles of downloads.
- block:
    - name: Retrieve component
      dci_component:
        dest: '{{ lookup("env", "PWD") }}/{{ item["id"] }}.tar.gz'
        id: '{{ item["id"] }}'
      with_items: '{{ components }}'

    - name: Ensure the repository directory exist
      file:
        path: '{{ base_location }}/{{ commit.stdout }}'
        state: directory
        owner: centos
        group: centos
        recurse: yes

    - name: Unarchive component
      unarchive:
        src: '{{ lookup("env", "PWD") }}/{{ item["id"] }}.tar.gz'
        dest: '{{ base_location }}/{{ commit.stdout }}'
        remote_src: True
      with_items: '{{ components }}'

    - name: Clean workspace the tarball
      file:
        name: '{{ lookup("env", "PWD") }}/{{ item["id"] }}.tar.gz'
        state: absent
      with_items: '{{ components }}'

  when: component_already_installed.stat.isdir is undefined or not component_already_installed.stat.isdir

# Setting facts to be reused on the testrunner node
# Since the agent VM is in a cloud, we need to find out our public ip
- name: Retrieve public IPv4 URL
  uri:
    url: https://api.ipify.org?format=json
    return_content: yes
  register: myipv4

- name: Set various facts
  set_fact:
    agent_public_ip: '{{ myipv4.json.ip }}'
    ansible_commit: '{{ commit.stdout}}'
